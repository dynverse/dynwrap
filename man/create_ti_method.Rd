% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ti_create_method.R
\name{create_ti_method}
\alias{create_ti_method}
\title{Create a TI method wrapper}
\usage{
create_ti_method(id, name, parameters = NULL, par_set = NULL, run_fun,
  plot_fun = NULL, package_loaded = c(), package_required = c(),
  type = c("algorithm", "algorithm_test", "control", "control_test"), ...,
  remotes_package = ifelse("dynmethods" \%in\% rownames(installed.packages()),
  "dynmethods", "dynwrap"))
}
\arguments{
\item{id}{A short name for the method, only lowercase characters allowed}

\item{name}{The name of the TI method}

\item{parameters}{A list of parameters, which can be parsed using \code{\link[=parse_parameter_definition]{parse_parameter_definition()}}}

\item{par_set}{A bunch of parameters created by \code{\link[ParamHelpers:makeParamSet]{ParamHelpers::makeParamSet()}}}

\item{run_fun}{A function to run the TI, needs to have 'counts' as its first param.}

\item{plot_fun}{A function to plot the results of a TI, needs to have 'prediction' as its first param.}

\item{package_loaded}{The packages that need to be loaded before executing the method}

\item{package_required}{The packages that need to be installed before executing the method}

\item{type}{The type of TI metod}

\item{...}{Other information about the wrapper, eg. apt_dependencies}

\item{remotes_package}{Package from which the remote locations of dependencies have to be extracted, eg. \code{dynmethods}}
}
\description{
Create a TI method wrapper
}
